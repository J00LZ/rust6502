use std::ops::BitAnd;
use std::num::Wrapping;


impl super::CPU{
  pub fn the_match_statement(&mut self, mut pins: super::Pins){
    match 0 {
    /* BRK  (0x00) */
        _ if self.ir == 0 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1 => {if !self.brk_flags.contains(super::BreakFlags::NMI) && !self.brk_flags.contains(super::BreakFlags::IRQ) { self.pc += 1;                }                super::sad(&mut pins, 0x0100 | self.sp as u16, (self.pc >> 8) as u8);                self.sp = (Wrapping(self.sp) - Wrapping(1)).0;                if !self.brk_flags.contains(super::BreakFlags::RESET) {                    super::wr(&mut pins)                }           },
        _ if self.ir == 2 => {super::sad(&mut pins, 0x0100 | self.sp as u16, (self.pc) as u8);self.sp = (Wrapping(self.sp) - Wrapping(1)).0;if !self.brk_flags.contains(super::BreakFlags::RESET) {super::wr(&mut pins)}},
        _ if self.ir == 3 => {super::sad(&mut pins, 0x0100 | self.sp as u16, self.sr.bits | super::StatusRegister::X.bits);self.sp = (Wrapping(self.sp) - Wrapping(1)).0;if self.brk_flags.contains(super::BreakFlags::RESET) {self.adl_adh = 0xFFFC;} else {super::wr(&mut pins);if self.brk_flags.contains(super::BreakFlags::NMI) {self.adl_adh = 0xFFFA} else {self.adl_adh = 0xFFFE}}},
        _ if self.ir == 4 => {super::sa(&mut pins, self.adl_adh);self.adl_adh += 1;self.sr.set(super::StatusRegister::I | super::StatusRegister::B, true);self.brk_flags = super::BreakFlags::empty();},
        _ if self.ir == 5 => {super::sa(&mut pins, self.adl_adh);self.adl_adh = super::gd(&pins) as u16; /* NMI "half-hijacking" not possible */},
        _ if self.ir == 6 => {self.pc = ((super::gd(&pins) as u16) << 8) | self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* ORA (zp,X) (0x01) */
        _ if self.ir == 8 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 9 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 10 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 11 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 12 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 13 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x02) */
        _ if self.ir == 16 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 17 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* SLO (zp,X) (undoc) (0x03) */
        _ if self.ir == 24 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 25 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 26 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 27 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 28 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 29 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 30 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 31 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp (undoc) (0x04) */
        _ if self.ir == 32 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 33 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 34 => {super::fetch(&mut pins, self.pc);},
    /* ORA zp (0x05) */
        _ if self.ir == 40 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 41 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 42 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ASL zp (0x06) */
        _ if self.ir == 48 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 49 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 50 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 51 => {super::sd(&mut pins, self.asl(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 52 => {super::fetch(&mut pins, self.pc);},
    /* SLO zp (undoc) (0x07) */
        _ if self.ir == 56 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 57 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 58 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 59 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 60 => {super::fetch(&mut pins, self.pc);},
    /* PHP  (0x08) */
        _ if self.ir == 64 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 65 => {super::sad(&mut pins, 0x0100|(self.sp as u16), self.sr.bits|super::StatusRegister::X.bits);self.sp-=1;super::wr(&mut pins);},
        _ if self.ir == 66 => {super::fetch(&mut pins, self.pc);},
    /* ORA # (0x09) */
        _ if self.ir == 72 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 73 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ASLA  (0x0A) */
        _ if self.ir == 80 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 81 => {self.ac = self.asl(self.ac);super::fetch(&mut pins, self.pc);},
    /* ANC # (undoc) (0x0B) */
        _ if self.ir == 88 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 89 => {self.ac = super::gd(&pins);self.nz(self.ac);self.sr.set(super::StatusRegister::C, (self.ac&0x80)!=0);super::fetch(&mut pins, self.pc);},
    /* NOP abs (undoc) (0x0C) */
        _ if self.ir == 96 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 97 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 98 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 99 => {super::fetch(&mut pins, self.pc);},
    /* ORA abs (0x0D) */
        _ if self.ir == 104 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 105 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 106 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 107 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ASL abs (0x0E) */
        _ if self.ir == 112 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 113 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 114 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 115 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 116 => {super::sd(&mut pins, self.asl(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 117 => {super::fetch(&mut pins, self.pc);},
    /* SLO abs (undoc) (0x0F) */
        _ if self.ir == 120 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 121 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 122 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 123 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 124 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 125 => {super::fetch(&mut pins, self.pc);},
    /* BPL # (0x10) */
        _ if self.ir == 128 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 129 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::N).bits !=0x0 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 130 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 131 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* ORA (zp),Y (0x11) */
        _ if self.ir == 136 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 137 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 138 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 139 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 140 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 141 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x12) */
        _ if self.ir == 144 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 145 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* SLO (zp),Y (undoc) (0x13) */
        _ if self.ir == 152 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 153 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 154 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 155 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 156 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 157 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 158 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 159 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp,X (undoc) (0x14) */
        _ if self.ir == 160 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 161 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 162 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 163 => {super::fetch(&mut pins, self.pc);},
    /* ORA zp,X (0x15) */
        _ if self.ir == 168 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 169 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 170 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 171 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ASL zp,X (0x16) */
        _ if self.ir == 176 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 177 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 178 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 179 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 180 => {super::sd(&mut pins, self.asl(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 181 => {super::fetch(&mut pins, self.pc);},
    /* SLO zp,X (undoc) (0x17) */
        _ if self.ir == 184 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 185 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 186 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 187 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 188 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 189 => {super::fetch(&mut pins, self.pc);},
    /* CLC  (0x18) */
        _ if self.ir == 192 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 193 => {self.sr.set(super::StatusRegister::C, false);super::fetch(&mut pins, self.pc);},
    /* ORA abs,Y (0x19) */
        _ if self.ir == 200 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 201 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 202 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 203 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 204 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* NOP  (undoc) (0x1A) */
        _ if self.ir == 208 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 209 => {super::fetch(&mut pins, self.pc);},
    /* SLO abs,Y (undoc) (0x1B) */
        _ if self.ir == 216 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 217 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 218 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 219 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 220 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 221 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 222 => {super::fetch(&mut pins, self.pc);},
    /* NOP abs,X (undoc) (0x1C) */
        _ if self.ir == 224 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 225 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 226 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 227 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 228 => {super::fetch(&mut pins, self.pc);},
    /* ORA abs,X (0x1D) */
        _ if self.ir == 232 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 233 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 234 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 235 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 236 => {self.ac|=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ASL abs,X (0x1E) */
        _ if self.ir == 240 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 241 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 242 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 243 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 244 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 245 => {super::sd(&mut pins, self.asl(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 246 => {super::fetch(&mut pins, self.pc);},
    /* SLO abs,X (undoc) (0x1F) */
        _ if self.ir == 248 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 249 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 250 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 251 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 252 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 253 => {self.adl_adh = self.asl(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac|=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 254 => {super::fetch(&mut pins, self.pc);},
    /* JSR  (0x20) */
        _ if self.ir == 256 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 257 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 258 => {super::sad(&mut pins, 0x0100|(self.sp as u16), (self.pc>>8) as u8);self.sp-=1;super::wr(&mut pins);},
        _ if self.ir == 259 => {super::sad(&mut pins, 0x0100|(self.sp as u16), self.pc as u8);self.sp-=1;super::wr(&mut pins);},
        _ if self.ir == 260 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 261 => {self.pc = ((super::gd(&pins) as u16)<<8)|self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* AND (zp,X) (0x21) */
        _ if self.ir == 264 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 265 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 266 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 267 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 268 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 269 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x22) */
        _ if self.ir == 272 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 273 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* RLA (zp,X) (undoc) (0x23) */
        _ if self.ir == 280 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 281 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 282 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 283 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 284 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 285 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 286 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 287 => {super::fetch(&mut pins, self.pc);},
    /* BIT zp (0x24) */
        _ if self.ir == 288 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 289 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 290 => {self.bit(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* AND zp (0x25) */
        _ if self.ir == 296 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 297 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 298 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ROL zp (0x26) */
        _ if self.ir == 304 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 305 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 306 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 307 => {super::sd(&mut pins, self.rol(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 308 => {super::fetch(&mut pins, self.pc);},
    /* RLA zp (undoc) (0x27) */
        _ if self.ir == 312 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 313 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 314 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 315 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 316 => {super::fetch(&mut pins, self.pc);},
    /* PLP  (0x28) */
        _ if self.ir == 320 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 321 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;},
        _ if self.ir == 322 => {super::sa(&mut pins, 0x0100|(self.sp as u16));},
        _ if self.ir == 323 => {self.sr = super::StatusRegister::from_bits_truncate((super::gd(&pins)|super::StatusRegister::B.bits)&!super::StatusRegister::X.bits);super::fetch(&mut pins, self.pc);},
    /* AND # (0x29) */
        _ if self.ir == 328 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 329 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ROLA  (0x2A) */
        _ if self.ir == 336 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 337 => {self.ac=self.rol(self.ac);super::fetch(&mut pins, self.pc);},
    /* ANC # (undoc) (0x2B) */
        _ if self.ir == 344 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 345 => {self.ac = super::gd(&pins);self.nz(self.ac);self.sr.set(super::StatusRegister::C, (self.ac&0x80)!=0);super::fetch(&mut pins, self.pc);},
    /* BIT abs (0x2C) */
        _ if self.ir == 352 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 353 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 354 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 355 => {self.bit(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* AND abs (0x2D) */
        _ if self.ir == 360 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 361 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 362 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 363 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ROL abs (0x2E) */
        _ if self.ir == 368 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 369 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 370 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 371 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 372 => {super::sd(&mut pins, self.rol(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 373 => {super::fetch(&mut pins, self.pc);},
    /* RLA abs (undoc) (0x2F) */
        _ if self.ir == 376 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 377 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 378 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 379 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 380 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 381 => {super::fetch(&mut pins, self.pc);},
    /* BMI # (0x30) */
        _ if self.ir == 384 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 385 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::N).bits !=0x80 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 386 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 387 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* AND (zp),Y (0x31) */
        _ if self.ir == 392 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 393 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 394 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 395 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 396 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 397 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x32) */
        _ if self.ir == 400 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 401 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* RLA (zp),Y (undoc) (0x33) */
        _ if self.ir == 408 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 409 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 410 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 411 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 412 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 413 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 414 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 415 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp,X (undoc) (0x34) */
        _ if self.ir == 416 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 417 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 418 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 419 => {super::fetch(&mut pins, self.pc);},
    /* AND zp,X (0x35) */
        _ if self.ir == 424 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 425 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 426 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 427 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ROL zp,X (0x36) */
        _ if self.ir == 432 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 433 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 434 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 435 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 436 => {super::sd(&mut pins, self.rol(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 437 => {super::fetch(&mut pins, self.pc);},
    /* RLA zp,X (undoc) (0x37) */
        _ if self.ir == 440 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 441 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 442 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 443 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 444 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 445 => {super::fetch(&mut pins, self.pc);},
    /* SEC  (0x38) */
        _ if self.ir == 448 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 449 => {self.sr.set(super::StatusRegister::C, true);super::fetch(&mut pins, self.pc);},
    /* AND abs,Y (0x39) */
        _ if self.ir == 456 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 457 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 458 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 459 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 460 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* NOP  (undoc) (0x3A) */
        _ if self.ir == 464 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 465 => {super::fetch(&mut pins, self.pc);},
    /* RLA abs,Y (undoc) (0x3B) */
        _ if self.ir == 472 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 473 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 474 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 475 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 476 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 477 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 478 => {super::fetch(&mut pins, self.pc);},
    /* NOP abs,X (undoc) (0x3C) */
        _ if self.ir == 480 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 481 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 482 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 483 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 484 => {super::fetch(&mut pins, self.pc);},
    /* AND abs,X (0x3D) */
        _ if self.ir == 488 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 489 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 490 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 491 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 492 => {self.ac&=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ROL abs,X (0x3E) */
        _ if self.ir == 496 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 497 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 498 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 499 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 500 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 501 => {super::sd(&mut pins, self.rol(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 502 => {super::fetch(&mut pins, self.pc);},
    /* RLA abs,X (undoc) (0x3F) */
        _ if self.ir == 504 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 505 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 506 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 507 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 508 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 509 => {self.adl_adh = self.rol(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.ac &=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 510 => {super::fetch(&mut pins, self.pc);},
    /* RTI  (0x40) */
        _ if self.ir == 512 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 513 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;},
        _ if self.ir == 514 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;},
        _ if self.ir == 515 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;self.sr = super::StatusRegister::from_bits_truncate((super::gd(&pins)|super::StatusRegister::B.bits)&!super::StatusRegister::X.bits);},
        _ if self.ir == 516 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 517 => {self.pc = ((super::gd(&pins) as u16)<<8)|self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* EOR (zp,X) (0x41) */
        _ if self.ir == 520 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 521 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 522 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 523 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 524 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 525 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x42) */
        _ if self.ir == 528 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 529 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* SRE (zp,X) (undoc) (0x43) */
        _ if self.ir == 536 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 537 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 538 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 539 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 540 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 541 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 542 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 543 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp (undoc) (0x44) */
        _ if self.ir == 544 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 545 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 546 => {super::fetch(&mut pins, self.pc);},
    /* EOR zp (0x45) */
        _ if self.ir == 552 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 553 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 554 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LSR zp (0x46) */
        _ if self.ir == 560 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 561 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 562 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 563 => {super::sd(&mut pins, self.lsr(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 564 => {super::fetch(&mut pins, self.pc);},
    /* SRE zp (undoc) (0x47) */
        _ if self.ir == 568 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 569 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 570 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 571 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 572 => {super::fetch(&mut pins, self.pc);},
    /* PHA  (0x48) */
        _ if self.ir == 576 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 577 => {super::sad(&mut pins, 0x0100|(self.sp as u16), self.ac);self.sp-=1;super::wr(&mut pins);},
        _ if self.ir == 578 => {super::fetch(&mut pins, self.pc);},
    /* EOR # (0x49) */
        _ if self.ir == 584 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 585 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LSRA  (0x4A) */
        _ if self.ir == 592 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 593 => {self.ac = self.asl(self.ac);super::fetch(&mut pins, self.pc);},
    /* ASR # (undoc) (0x4B) */
        _ if self.ir == 600 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 601 => {self.ac=super::gd(&pins);self.ac = self.asl(self.ac);super::fetch(&mut pins, self.pc);},
    /* JMP  (0x4C) */
        _ if self.ir == 608 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 609 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 610 => {self.pc = ((super::gd(&pins) as u16)<<8)|self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* EOR abs (0x4D) */
        _ if self.ir == 616 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 617 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 618 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 619 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LSR abs (0x4E) */
        _ if self.ir == 624 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 625 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 626 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 627 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 628 => {super::sd(&mut pins, self.lsr(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 629 => {super::fetch(&mut pins, self.pc);},
    /* SRE abs (undoc) (0x4F) */
        _ if self.ir == 632 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 633 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 634 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 635 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 636 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 637 => {super::fetch(&mut pins, self.pc);},
    /* BVC # (0x50) */
        _ if self.ir == 640 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 641 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::V).bits !=0x0 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 642 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 643 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* EOR (zp),Y (0x51) */
        _ if self.ir == 648 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 649 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 650 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 651 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 652 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 653 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x52) */
        _ if self.ir == 656 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 657 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* SRE (zp),Y (undoc) (0x53) */
        _ if self.ir == 664 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 665 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 666 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 667 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 668 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 669 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 670 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 671 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp,X (undoc) (0x54) */
        _ if self.ir == 672 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 673 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 674 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 675 => {super::fetch(&mut pins, self.pc);},
    /* EOR zp,X (0x55) */
        _ if self.ir == 680 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 681 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 682 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 683 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LSR zp,X (0x56) */
        _ if self.ir == 688 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 689 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 690 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 691 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 692 => {super::sd(&mut pins, self.lsr(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 693 => {super::fetch(&mut pins, self.pc);},
    /* SRE zp,X (undoc) (0x57) */
        _ if self.ir == 696 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 697 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 698 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 699 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 700 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 701 => {super::fetch(&mut pins, self.pc);},
    /* CLI  (0x58) */
        _ if self.ir == 704 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 705 => {self.sr.set(super::StatusRegister::I, false);super::fetch(&mut pins, self.pc);},
    /* EOR abs,Y (0x59) */
        _ if self.ir == 712 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 713 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 714 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 715 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 716 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* NOP  (undoc) (0x5A) */
        _ if self.ir == 720 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 721 => {super::fetch(&mut pins, self.pc);},
    /* SRE abs,Y (undoc) (0x5B) */
        _ if self.ir == 728 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 729 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 730 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 731 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 732 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 733 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 734 => {super::fetch(&mut pins, self.pc);},
    /* NOP abs,X (undoc) (0x5C) */
        _ if self.ir == 736 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 737 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 738 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 739 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 740 => {super::fetch(&mut pins, self.pc);},
    /* EOR abs,X (0x5D) */
        _ if self.ir == 744 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 745 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 746 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 747 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 748 => {self.ac^=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LSR abs,X (0x5E) */
        _ if self.ir == 752 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 753 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 754 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 755 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 756 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 757 => {super::sd(&mut pins, self.lsr(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 758 => {super::fetch(&mut pins, self.pc);},
    /* SRE abs,X (undoc) (0x5F) */
        _ if self.ir == 760 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 761 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 762 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 763 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 764 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 765 => {self.adl_adh = self.lsr(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8); self.ac^=self.adl_adh as u8;self.nz(self.ac);super::wr(&mut pins);},
        _ if self.ir == 766 => {super::fetch(&mut pins, self.pc);},
    /* RTS  (0x60) */
        _ if self.ir == 768 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 769 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;},
        _ if self.ir == 770 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;},
        _ if self.ir == 771 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 772 => {self.pc = ((super::gd(&pins) as u16)<<8)|self.adl_adh;super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 773 => {super::fetch(&mut pins, self.pc);},
    /* ADC (zp,X) (0x61) */
        _ if self.ir == 776 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 777 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 778 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 779 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 780 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 781 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x62) */
        _ if self.ir == 784 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 785 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* RRA (zp,X) (undoc) (0x63) */
        _ if self.ir == 792 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 793 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 794 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 795 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 796 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 797 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 798 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 799 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp (undoc) (0x64) */
        _ if self.ir == 800 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 801 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 802 => {super::fetch(&mut pins, self.pc);},
    /* ADC zp (0x65) */
        _ if self.ir == 808 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 809 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 810 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* ROR zp (0x66) */
        _ if self.ir == 816 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 817 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 818 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 819 => {super::sd(&mut pins, self.ror(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 820 => {super::fetch(&mut pins, self.pc);},
    /* RRA zp (undoc) (0x67) */
        _ if self.ir == 824 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 825 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 826 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 827 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 828 => {super::fetch(&mut pins, self.pc);},
    /* PLA  (0x68) */
        _ if self.ir == 832 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 833 => {super::sa(&mut pins, 0x0100|(self.sp as u16));self.sp+=1;},
        _ if self.ir == 834 => {super::sa(&mut pins, 0x0100|(self.sp as u16));},
        _ if self.ir == 835 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ADC # (0x69) */
        _ if self.ir == 840 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 841 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* RORA  (0x6A) */
        _ if self.ir == 848 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 849 => {self.ac=self.ror(self.ac);super::fetch(&mut pins, self.pc);},
    /* ARR # (undoc) (0x6B) */
        _ if self.ir == 856 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 857 => {self.ac=super::gd(&pins);self.arr();super::fetch(&mut pins, self.pc);},
    /* JMPI  (0x6C) */
        _ if self.ir == 864 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 865 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 866 => {self.adl_adh|=(super::gd(&pins) as u16)<<8;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 867 => {super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+1)&0x00FF));self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 868 => {self.pc = ((super::gd(&pins) as u16)<<8)|self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* ADC abs (0x6D) */
        _ if self.ir == 872 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 873 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 874 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 875 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* ROR abs (0x6E) */
        _ if self.ir == 880 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 881 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 882 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 883 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 884 => {super::sd(&mut pins, self.ror(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 885 => {super::fetch(&mut pins, self.pc);},
    /* RRA abs (undoc) (0x6F) */
        _ if self.ir == 888 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 889 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 890 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 891 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 892 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 893 => {super::fetch(&mut pins, self.pc);},
    /* BVS # (0x70) */
        _ if self.ir == 896 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 897 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::V).bits !=0x40 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 898 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 899 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* ADC (zp),Y (0x71) */
        _ if self.ir == 904 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 905 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 906 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 907 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 908 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 909 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x72) */
        _ if self.ir == 912 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 913 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* RRA (zp),Y (undoc) (0x73) */
        _ if self.ir == 920 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 921 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 922 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 923 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 924 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 925 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 926 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 927 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp,X (undoc) (0x74) */
        _ if self.ir == 928 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 929 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 930 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 931 => {super::fetch(&mut pins, self.pc);},
    /* ADC zp,X (0x75) */
        _ if self.ir == 936 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 937 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 938 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 939 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* ROR zp,X (0x76) */
        _ if self.ir == 944 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 945 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 946 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 947 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 948 => {super::sd(&mut pins, self.ror(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 949 => {super::fetch(&mut pins, self.pc);},
    /* RRA zp,X (undoc) (0x77) */
        _ if self.ir == 952 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 953 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 954 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 955 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 956 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 957 => {super::fetch(&mut pins, self.pc);},
    /* SEI  (0x78) */
        _ if self.ir == 960 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 961 => {self.sr.set(super::StatusRegister::I, true);super::fetch(&mut pins, self.pc);},
    /* ADC abs,Y (0x79) */
        _ if self.ir == 968 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 969 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 970 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 971 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 972 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* NOP  (undoc) (0x7A) */
        _ if self.ir == 976 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 977 => {super::fetch(&mut pins, self.pc);},
    /* RRA abs,Y (undoc) (0x7B) */
        _ if self.ir == 984 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 985 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 986 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 987 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 988 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 989 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 990 => {super::fetch(&mut pins, self.pc);},
    /* NOP abs,X (undoc) (0x7C) */
        _ if self.ir == 992 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 993 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 994 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 995 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 996 => {super::fetch(&mut pins, self.pc);},
    /* ADC abs,X (0x7D) */
        _ if self.ir == 1000 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1001 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1002 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 1003 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1004 => {self.adc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* ROR abs,X (0x7E) */
        _ if self.ir == 1008 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1009 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1010 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 1011 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1012 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1013 => {super::sd(&mut pins, self.ror(self.adl_adh as u8));super::wr(&mut pins);},
        _ if self.ir == 1014 => {super::fetch(&mut pins, self.pc);},
    /* RRA abs,X (undoc) (0x7F) */
        _ if self.ir == 1016 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1017 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1018 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 1019 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1020 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1021 => {self.adl_adh = self.ror(self.adl_adh as u8) as u16;super::sd(&mut pins, self.adl_adh as u8);self.adc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1022 => {super::fetch(&mut pins, self.pc);},
    /* NOP # (undoc) (0x80) */
        _ if self.ir == 1024 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1025 => {super::fetch(&mut pins, self.pc);},
    /* STA (zp,X) (0x81) */
        _ if self.ir == 1032 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1033 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1034 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1035 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1036 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1037 => {super::fetch(&mut pins, self.pc);},
    /* NOP # (undoc) (0x82) */
        _ if self.ir == 1040 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1041 => {super::fetch(&mut pins, self.pc);},
    /* SAX (zp,X) (undoc) (0x83) */
        _ if self.ir == 1048 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1049 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1050 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1051 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1052 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);super::sd(&mut pins, self.ac&self.x); super::wr(&mut pins);},
        _ if self.ir == 1053 => {super::fetch(&mut pins, self.pc);},
    /* STY zp (0x84) */
        _ if self.ir == 1056 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1057 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);super::sd(&mut pins, self.y); super::wr(&mut pins);},
        _ if self.ir == 1058 => {super::fetch(&mut pins, self.pc);},
    /* STA zp (0x85) */
        _ if self.ir == 1064 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1065 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1066 => {super::fetch(&mut pins, self.pc);},
    /* STX zp (0x86) */
        _ if self.ir == 1072 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1073 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);super::sd(&mut pins, self.x); super::wr(&mut pins);},
        _ if self.ir == 1074 => {super::fetch(&mut pins, self.pc);},
    /* SAX zp (undoc) (0x87) */
        _ if self.ir == 1080 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1081 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);super::sd(&mut pins, self.ac&self.x); super::wr(&mut pins);},
        _ if self.ir == 1082 => {super::fetch(&mut pins, self.pc);},
    /* DEY  (0x88) */
        _ if self.ir == 1088 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1089 => {self.y-=1; self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* NOP # (undoc) (0x89) */
        _ if self.ir == 1096 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1097 => {super::fetch(&mut pins, self.pc);},
    /* TXA  (0x8A) */
        _ if self.ir == 1104 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1105 => {self.ac=self.x;self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* ANE # (undoc) (0x8B) */
        _ if self.ir == 1112 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1113 => {self.ac = (self.ac|0xEE)&self.x&super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* STY abs (0x8C) */
        _ if self.ir == 1120 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1121 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1122 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);super::sd(&mut pins, self.y); super::wr(&mut pins);},
        _ if self.ir == 1123 => {super::fetch(&mut pins, self.pc);},
    /* STA abs (0x8D) */
        _ if self.ir == 1128 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1129 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1130 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1131 => {super::fetch(&mut pins, self.pc);},
    /* STX abs (0x8E) */
        _ if self.ir == 1136 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1137 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1138 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);super::sd(&mut pins, self.x); super::wr(&mut pins);},
        _ if self.ir == 1139 => {super::fetch(&mut pins, self.pc);},
    /* SAX abs (undoc) (0x8F) */
        _ if self.ir == 1144 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1145 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1146 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);super::sd(&mut pins, self.ac&self.x); super::wr(&mut pins);},
        _ if self.ir == 1147 => {super::fetch(&mut pins, self.pc);},
    /* BCC # (0x90) */
        _ if self.ir == 1152 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1153 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::C).bits !=0x0 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1154 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1155 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* STA (zp),Y (0x91) */
        _ if self.ir == 1160 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1161 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1162 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1163 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1164 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1165 => {super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0x92) */
        _ if self.ir == 1168 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1169 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* SHA (zp),Y (undoc) (0x93) */
        _ if self.ir == 1176 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1177 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1178 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1179 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1180 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));let zz = ((super::ga(&pins) >> 8) + 1) as u8;super::sd(&mut pins, self.ac & self.x & zz);super::wr(&mut pins);},
        _ if self.ir == 1181 => {super::fetch(&mut pins, self.pc);},
    /* STY zp,X (0x94) */
        _ if self.ir == 1184 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1185 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1186 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);super::sd(&mut pins, self.y); super::wr(&mut pins);},
        _ if self.ir == 1187 => {super::fetch(&mut pins, self.pc);},
    /* STA zp,X (0x95) */
        _ if self.ir == 1192 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1193 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1194 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1195 => {super::fetch(&mut pins, self.pc);},
    /* STX zp,Y (0x96) */
        _ if self.ir == 1200 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1201 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1202 => {super::sa(&mut pins, (self.adl_adh+(self.y as u16))&0x00FF);super::sd(&mut pins, self.x); super::wr(&mut pins);},
        _ if self.ir == 1203 => {super::fetch(&mut pins, self.pc);},
    /* SAX zp,Y (undoc) (0x97) */
        _ if self.ir == 1208 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1209 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1210 => {super::sa(&mut pins, (self.adl_adh+(self.y as u16))&0x00FF);super::sd(&mut pins, self.ac&self.x); super::wr(&mut pins);},
        _ if self.ir == 1211 => {super::fetch(&mut pins, self.pc);},
    /* TYA  (0x98) */
        _ if self.ir == 1216 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1217 => {self.ac=self.x;self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* STA abs,Y (0x99) */
        _ if self.ir == 1224 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1225 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1226 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1227 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1228 => {super::fetch(&mut pins, self.pc);},
    /* TXS  (0x9A) */
        _ if self.ir == 1232 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1233 => {self.sp=self.x;super::fetch(&mut pins, self.pc);},
    /* SHS abs,Y (undoc) (0x9B) */
        _ if self.ir == 1240 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1241 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1242 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1243 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));self.sp=self.ac & self.x;let zz = ((super::ga(&pins) >> 8) + 1) as u8;super::sd(&mut pins, self.sp&zz);super::wr(&mut pins);},
        _ if self.ir == 1244 => {super::fetch(&mut pins, self.pc);},
    /* SHY abs,X (undoc) (0x9C) */
        _ if self.ir == 1248 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1249 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1250 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 1251 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));let zz = ((super::ga(&pins) >> 8) + 1) as u8;super::sd(&mut pins, self.y & zz);super::wr(&mut pins);},
        _ if self.ir == 1252 => {super::fetch(&mut pins, self.pc);},
    /* STA abs,X (0x9D) */
        _ if self.ir == 1256 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1257 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1258 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 1259 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));super::sd(&mut pins, self.ac); super::wr(&mut pins);},
        _ if self.ir == 1260 => {super::fetch(&mut pins, self.pc);},
    /* SHX abs,Y (undoc) (0x9E) */
        _ if self.ir == 1264 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1265 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1266 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1267 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));let zz = ((super::ga(&pins) >> 8) + 1) as u8;super::sd(&mut pins, self.x & zz);super::wr(&mut pins);},
        _ if self.ir == 1268 => {super::fetch(&mut pins, self.pc);},
    /* SHA abs,Y (undoc) (0x9F) */
        _ if self.ir == 1272 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1273 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1274 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1275 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));let zz = ((super::ga(&pins) >> 8) + 1) as u8;super::sd(&mut pins, self.ac & self.x & zz);super::wr(&mut pins);},
        _ if self.ir == 1276 => {super::fetch(&mut pins, self.pc);},
    /* LDY # (0xA0) */
        _ if self.ir == 1280 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1281 => {self.y=super::gd(&pins);self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* LDA (zp,X) (0xA1) */
        _ if self.ir == 1288 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1289 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1290 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1291 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1292 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1293 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDX # (0xA2) */
        _ if self.ir == 1296 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1297 => {self.x=super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LAX (zp,X) (undoc) (0xA3) */
        _ if self.ir == 1304 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1305 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1306 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1307 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1308 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1309 => {self.ac = super::gd(&pins); self.x = super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LDY zp (0xA4) */
        _ if self.ir == 1312 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1313 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1314 => {self.y=super::gd(&pins);self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* LDA zp (0xA5) */
        _ if self.ir == 1320 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1321 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1322 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDX zp (0xA6) */
        _ if self.ir == 1328 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1329 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1330 => {self.x=super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LAX zp (undoc) (0xA7) */
        _ if self.ir == 1336 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1337 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1338 => {self.ac = super::gd(&pins); self.x = super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* TAY  (0xA8) */
        _ if self.ir == 1344 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1345 => {self.y=self.ac;self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* LDA # (0xA9) */
        _ if self.ir == 1352 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1353 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* TAX  (0xAA) */
        _ if self.ir == 1360 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1361 => {self.x=self.ac;self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LXA # (undoc) (0xAB) */
        _ if self.ir == 1368 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1369 => {let zz = (self.ac|0xEE)&super::gd(&pins);self.ac=zz;self.x=zz;self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDY abs (0xAC) */
        _ if self.ir == 1376 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1377 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1378 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1379 => {self.y=super::gd(&pins);self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* LDA abs (0xAD) */
        _ if self.ir == 1384 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1385 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1386 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1387 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDX abs (0xAE) */
        _ if self.ir == 1392 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1393 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1394 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1395 => {self.x=super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LAX abs (undoc) (0xAF) */
        _ if self.ir == 1400 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1401 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1402 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1403 => {self.ac = super::gd(&pins); self.x = super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* BCS # (0xB0) */
        _ if self.ir == 1408 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1409 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::C).bits !=0x1 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1410 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1411 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* LDA (zp),Y (0xB1) */
        _ if self.ir == 1416 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1417 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1418 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1419 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1420 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1421 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0xB2) */
        _ if self.ir == 1424 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1425 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* LAX (zp),Y (undoc) (0xB3) */
        _ if self.ir == 1432 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1433 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1434 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1435 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1436 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1437 => {self.ac = super::gd(&pins); self.x = super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LDY zp,X (0xB4) */
        _ if self.ir == 1440 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1441 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1442 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1443 => {self.y=super::gd(&pins);self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* LDA zp,X (0xB5) */
        _ if self.ir == 1448 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1449 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1450 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1451 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDX zp,Y (0xB6) */
        _ if self.ir == 1456 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1457 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1458 => {super::sa(&mut pins, (self.adl_adh+(self.y as u16))&0x00FF);},
        _ if self.ir == 1459 => {self.x=super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LAX zp,Y (undoc) (0xB7) */
        _ if self.ir == 1464 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1465 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1466 => {super::sa(&mut pins, (self.adl_adh+(self.y as u16))&0x00FF);},
        _ if self.ir == 1467 => {self.ac = super::gd(&pins); self.x = super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* CLV  (0xB8) */
        _ if self.ir == 1472 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1473 => {self.sr.set(super::StatusRegister::V, false);super::fetch(&mut pins, self.pc);},
    /* LDA abs,Y (0xB9) */
        _ if self.ir == 1480 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1481 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1482 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1483 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1484 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* TSX  (0xBA) */
        _ if self.ir == 1488 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1489 => {self.x=self.sp;self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LAS abs,Y (undoc) (0xBB) */
        _ if self.ir == 1496 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1497 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1498 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1499 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1500 => {let zz = super::gd(&pins)&self.sp;self.ac=zz;self.x=zz;self.sp=zz;self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDY abs,X (0xBC) */
        _ if self.ir == 1504 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1505 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1506 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 1507 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1508 => {self.y=super::gd(&pins);self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* LDA abs,X (0xBD) */
        _ if self.ir == 1512 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1513 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1514 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 1515 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1516 => {self.ac=super::gd(&pins);self.nz(self.ac);super::fetch(&mut pins, self.pc);},
    /* LDX abs,Y (0xBE) */
        _ if self.ir == 1520 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1521 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1522 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1523 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1524 => {self.x=super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* LAX abs,Y (undoc) (0xBF) */
        _ if self.ir == 1528 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1529 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1530 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1531 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1532 => {self.ac = super::gd(&pins); self.x = super::gd(&pins);self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* CPY # (0xC0) */
        _ if self.ir == 1536 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1537 => {self.cmp(self.y, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* CMP (zp,X) (0xC1) */
        _ if self.ir == 1544 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1545 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1546 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1547 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1548 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1549 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* NOP # (undoc) (0xC2) */
        _ if self.ir == 1552 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1553 => {super::fetch(&mut pins, self.pc);},
    /* DCP (zp,X) (undoc) (0xC3) */
        _ if self.ir == 1560 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1561 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1562 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1563 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1564 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1565 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1566 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1567 => {super::fetch(&mut pins, self.pc);},
    /* CPY zp (0xC4) */
        _ if self.ir == 1568 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1569 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1570 => {self.cmp(self.y, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* CMP zp (0xC5) */
        _ if self.ir == 1576 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1577 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1578 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* DEC zp (0xC6) */
        _ if self.ir == 1584 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1585 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1586 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1587 => {self.adl_adh-=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1588 => {super::fetch(&mut pins, self.pc);},
    /* DCP zp (undoc) (0xC7) */
        _ if self.ir == 1592 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1593 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1594 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1595 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1596 => {super::fetch(&mut pins, self.pc);},
    /* INY  (0xC8) */
        _ if self.ir == 1600 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1601 => {self.y+=1; self.nz(self.y);super::fetch(&mut pins, self.pc);},
    /* CMP # (0xC9) */
        _ if self.ir == 1608 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1609 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* DEX  (0xCA) */
        _ if self.ir == 1616 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1617 => {self.x-=1; self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* SBX # (undoc) (0xCB) */
        _ if self.ir == 1624 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1625 => {self.sbx(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* CPY abs (0xCC) */
        _ if self.ir == 1632 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1633 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1634 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1635 => {self.cmp(self.y, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* CMP abs (0xCD) */
        _ if self.ir == 1640 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1641 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1642 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1643 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* DEC abs (0xCE) */
        _ if self.ir == 1648 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1649 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1650 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1651 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1652 => {self.adl_adh-=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1653 => {super::fetch(&mut pins, self.pc);},
    /* DCP abs (undoc) (0xCF) */
        _ if self.ir == 1656 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1657 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1658 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1659 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1660 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1661 => {super::fetch(&mut pins, self.pc);},
    /* BNE # (0xD0) */
        _ if self.ir == 1664 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1665 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::Z).bits !=0x0 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1666 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1667 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* CMP (zp),Y (0xD1) */
        _ if self.ir == 1672 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1673 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1674 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1675 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1676 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1677 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0xD2) */
        _ if self.ir == 1680 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1681 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* DCP (zp),Y (undoc) (0xD3) */
        _ if self.ir == 1688 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1689 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1690 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1691 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1692 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1693 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1694 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1695 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp,X (undoc) (0xD4) */
        _ if self.ir == 1696 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1697 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1698 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1699 => {super::fetch(&mut pins, self.pc);},
    /* CMP zp,X (0xD5) */
        _ if self.ir == 1704 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1705 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1706 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1707 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* DEC zp,X (0xD6) */
        _ if self.ir == 1712 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1713 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1714 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1715 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1716 => {self.adl_adh-=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1717 => {super::fetch(&mut pins, self.pc);},
    /* DCP zp,X (undoc) (0xD7) */
        _ if self.ir == 1720 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1721 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1722 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1723 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1724 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1725 => {super::fetch(&mut pins, self.pc);},
    /* CLD  (0xD8) */
        _ if self.ir == 1728 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1729 => {self.sr.set(super::StatusRegister::D, false);super::fetch(&mut pins, self.pc);},
    /* CMP abs,Y (0xD9) */
        _ if self.ir == 1736 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1737 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1738 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1739 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1740 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* NOP  (undoc) (0xDA) */
        _ if self.ir == 1744 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1745 => {super::fetch(&mut pins, self.pc);},
    /* DCP abs,Y (undoc) (0xDB) */
        _ if self.ir == 1752 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1753 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1754 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1755 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1756 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1757 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1758 => {super::fetch(&mut pins, self.pc);},
    /* NOP abs,X (undoc) (0xDC) */
        _ if self.ir == 1760 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1761 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1762 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 1763 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1764 => {super::fetch(&mut pins, self.pc);},
    /* CMP abs,X (0xDD) */
        _ if self.ir == 1768 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1769 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1770 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 1771 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1772 => {self.cmp(self.ac, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* DEC abs,X (0xDE) */
        _ if self.ir == 1776 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1777 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1778 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 1779 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1780 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1781 => {self.adl_adh-=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1782 => {super::fetch(&mut pins, self.pc);},
    /* DCP abs,X (undoc) (0xDF) */
        _ if self.ir == 1784 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1785 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1786 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 1787 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 1788 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1789 => {self.adl_adh-=1;self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);self.cmp(self.ac, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1790 => {super::fetch(&mut pins, self.pc);},
    /* CPX # (0xE0) */
        _ if self.ir == 1792 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1793 => {self.cmp(self.x, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* SBC (zp,X) (0xE1) */
        _ if self.ir == 1800 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1801 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1802 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1803 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1804 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1805 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* NOP # (undoc) (0xE2) */
        _ if self.ir == 1808 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1809 => {super::fetch(&mut pins, self.pc);},
    /* ISB (zp,X) (undoc) (0xE3) */
        _ if self.ir == 1816 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1817 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1818 => {self.adl_adh = (self.adl_adh+(self.x as u16))&0xFF;super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1819 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1820 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1821 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1822 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1823 => {super::fetch(&mut pins, self.pc);},
    /* CPX zp (0xE4) */
        _ if self.ir == 1824 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1825 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1826 => {self.cmp(self.x, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* SBC zp (0xE5) */
        _ if self.ir == 1832 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1833 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1834 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* INC zp (0xE6) */
        _ if self.ir == 1840 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1841 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1842 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1843 => {self.adl_adh+=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1844 => {super::fetch(&mut pins, self.pc);},
    /* ISB zp (undoc) (0xE7) */
        _ if self.ir == 1848 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1849 => {let zz = super::ga(&pins);super::sa(&mut pins, zz);},
        _ if self.ir == 1850 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1851 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1852 => {super::fetch(&mut pins, self.pc);},
    /* INX  (0xE8) */
        _ if self.ir == 1856 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1857 => {self.x+=1; self.nz(self.x);super::fetch(&mut pins, self.pc);},
    /* SBC # (0xE9) */
        _ if self.ir == 1864 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1865 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* NOP  (0xEA) */
        _ if self.ir == 1872 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1873 => {super::fetch(&mut pins, self.pc);},
    /* SBC # (undoc) (0xEB) */
        _ if self.ir == 1880 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1881 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* CPX abs (0xEC) */
        _ if self.ir == 1888 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1889 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1890 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1891 => {self.cmp(self.x, super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* SBC abs (0xED) */
        _ if self.ir == 1896 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1897 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1898 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1899 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* INC abs (0xEE) */
        _ if self.ir == 1904 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1905 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1906 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1907 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1908 => {self.adl_adh+=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1909 => {super::fetch(&mut pins, self.pc);},
    /* ISB abs (undoc) (0xEF) */
        _ if self.ir == 1912 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1913 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1914 => {let zz = super::gd(&pins);super::sa(&mut pins, ((zz as u16) << 8) | self.adl_adh);},
        _ if self.ir == 1915 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1916 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1917 => {super::fetch(&mut pins, self.pc);},
    /* BEQ # (0xF0) */
        _ if self.ir == 1920 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1921 => {super::sa(&mut pins, self.pc);self.adl_adh=self.pc+(super::gd(&pins) as u16); if self.sr.bitand(super::StatusRegister::Z).bits !=0x2 { super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1922 => {super::sa(&mut pins, (self.pc & 0xFF00)|(self.adl_adh&0x00FF));if self.adl_adh&0xFF00 == self.pc &0xFF00 { self.pc=self.adl_adh;self.irq_pip>>=1;self.nmi_pip>>=1;super::fetch(&mut pins, self.pc) }},
        _ if self.ir == 1923 => {self.pc=self.adl_adh;super::fetch(&mut pins, self.pc);},
    /* SBC (zp),Y (0xF1) */
        _ if self.ir == 1928 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1929 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1930 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1931 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1932 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1933 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* JAM INVALID (undoc) (0xF2) */
        _ if self.ir == 1936 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1937 => {super::sad(&mut pins, 0xFFFF,0xFF);self.ir-=1;},
    /* ISB (zp),Y (undoc) (0xF3) */
        _ if self.ir == 1944 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1945 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1946 => {super::sa(&mut pins, (self.adl_adh+1) & 0xFF); self.adl_adh = super::ga(&pins);},
        _ if self.ir == 1947 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 1948 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1949 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1950 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1951 => {super::fetch(&mut pins, self.pc);},
    /* NOP zp,X (undoc) (0xF4) */
        _ if self.ir == 1952 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1953 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1954 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1955 => {super::fetch(&mut pins, self.pc);},
    /* SBC zp,X (0xF5) */
        _ if self.ir == 1960 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1961 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1962 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1963 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* INC zp,X (0xF6) */
        _ if self.ir == 1968 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1969 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1970 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1971 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1972 => {self.adl_adh+=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1973 => {super::fetch(&mut pins, self.pc);},
    /* ISB zp,X (undoc) (0xF7) */
        _ if self.ir == 1976 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1977 => {self.adl_adh = super::ga(&pins);super::sa(&mut pins, self.adl_adh);},
        _ if self.ir == 1978 => {super::sa(&mut pins, (self.adl_adh + (self.x as u16)) & 0x00FF);},
        _ if self.ir == 1979 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 1980 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 1981 => {super::fetch(&mut pins, self.pc);},
    /* SED  (0xF8) */
        _ if self.ir == 1984 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 1985 => {self.sr.set(super::StatusRegister::D, true);super::fetch(&mut pins, self.pc);},
    /* SBC abs,Y (0xF9) */
        _ if self.ir == 1992 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 1993 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 1994 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.y as u16)) >> 8)))&1;},
        _ if self.ir == 1995 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 1996 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* NOP  (undoc) (0xFA) */
        _ if self.ir == 2000 => {super::sa(&mut pins, self.pc);},
        _ if self.ir == 2001 => {super::fetch(&mut pins, self.pc);},
    /* ISB abs,Y (undoc) (0xFB) */
        _ if self.ir == 2008 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 2009 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 2010 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.y as u16))&0xFF));},
        _ if self.ir == 2011 => {super::sa(&mut pins, self.adl_adh+(self.y as u16));},
        _ if self.ir == 2012 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 2013 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 2014 => {super::fetch(&mut pins, self.pc);},
    /* NOP abs,X (undoc) (0xFC) */
        _ if self.ir == 2016 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 2017 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 2018 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 2019 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 2020 => {super::fetch(&mut pins, self.pc);},
    /* SBC abs,X (0xFD) */
        _ if self.ir == 2024 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 2025 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 2026 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));self.ir += (!((self.adl_adh >> 8) - ((self.adl_adh + (self.x as u16)) >> 8)))&1;},
        _ if self.ir == 2027 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 2028 => {self.sbc(super::gd(&pins));super::fetch(&mut pins, self.pc);},
    /* INC abs,X (0xFE) */
        _ if self.ir == 2032 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 2033 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 2034 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 2035 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 2036 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 2037 => {self.adl_adh+=1; self.nz(self.adl_adh as u8);super::sd(&mut pins, self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 2038 => {super::fetch(&mut pins, self.pc);},
    /* ISB abs,X (undoc) (0xFF) */
        _ if self.ir == 2040 => {super::sa(&mut pins, self.pc);self.pc+=1;},
        _ if self.ir == 2041 => {super::sa(&mut pins, self.pc);self.pc+=1;self.adl_adh = super::gd(&pins) as u16;},
        _ if self.ir == 2042 => {self.adl_adh|=(super::gd(&pins)as u16)<<8;super::sa(&mut pins, (self.adl_adh&0xFF00)|((self.adl_adh+(self.x as u16))&0xFF));},
        _ if self.ir == 2043 => {super::sa(&mut pins, self.adl_adh+(self.x as u16));},
        _ if self.ir == 2044 => {self.adl_adh = super::gd(&pins) as u16;super::wr(&mut pins);},
        _ if self.ir == 2045 => {self.adl_adh+=1;super::sd(&mut pins, self.adl_adh as u8); self.sbc(self.adl_adh as u8);super::wr(&mut pins);},
        _ if self.ir == 2046 => {super::fetch(&mut pins, self.pc);},

      _ => panic!(
        "This instruction does not exist: {:#04X}|{}!",
        self.ir >> 3,
        self.ir & 7
      ),
    }
  }
}